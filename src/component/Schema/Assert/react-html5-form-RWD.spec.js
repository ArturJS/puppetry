
/**
 * Generated by https://github.com/dsheiko/puppetry
 * on Tue Aug 27 2019 13:26:45 GMT+0200 (Central European Summer Time)
 * Suite: Responsive web design
 */



const {
        bs, util, fetch, localStorage
      } = require( "../lib/bootstrap" )( "Responsive--web--design" ),
      devices = require( "puppeteer/DeviceDescriptors" );


util.setProjectDirectory( "/home/sheiko/.config/puppetry/project-demo" );


jest.setTimeout( 1800000 );


// Environment variables
const ENV = {

};

const SEL_JUMBOTRON_DESC = async () => bs.query( ".jumbotron p.gt-small", "SEL_JUMBOTRON_DESC" );
const SEL_EMAIL = async () => bs.query( "[name=email]", "SEL_EMAIL" );
const SEL_FNAME = async () => bs.query( "[name=firstName]", "SEL_FNAME" );

describe( "Responsive web design", async () => {
  beforeAll(async () => {
    await bs.setup();
    
    bs.page.on( "load", async () => {
      await bs.page.addStyleTag({ content: `
      .__PUPPETRY_toolbox {
        position: fixed;
        z-index: 99999;
        top: 0;
        left: 0;
        width: 200px;
        height: 120px;
        border: 1px solid black;
        background-color: white;
        padding: 8px;
      }
`});
      await bs.page.addScriptTag({ content: `const data = {
  "sids": [
    "36ijnyo3ewr",
    "8wcjztota9n",
    "8wcjztotqll"
  ],
  "suite": [
    {
      "title": "Main page",
      "tests": [
        {
          "title": "on PC/Notebook 1280x1024",
          "commands": [
            {
              "target": "page",
              "method": "setViewport",
              "addon": "(1280, 1024, x1)"
            },
            {
              "target": "page",
              "method": "goto",
              "addon": "(https://dsheiko.github.io/react-html5-form/)"
            },
            {
              "target": "SEL_EMAIL",
              "method": "type",
              "addon": "(WRONG EMAIL)"
            },
            {
              "target": "SEL_FNAME",
              "method": "type",
              "addon": "({{ faker( \"name.jobDescriptor\", \"de_CH\" ) }})"
            }
          ]
        }
      ]
    }
  ]
};
        
    document.body.insertAdjacentHTML( "beforebegin",
      '<div class="__PUPPETRY_toolbox">'
      + '<button id="__PUPPETRY_next" class="__PUPPETRY_toolbox_btn">Next</button>'
      + '</div>' );

    const CONTAINER = document.querySelector( ".__PUPPETRY_toolbox" ),
          NEXT_BTN = document.querySelector( "#__PUPPETRY_next" );

    let counter = 0;

    NEXT_BTN.addEventListener( "click", ( e ) => {
      e.preventDefault();
      e.stopPropagation();
      document.body.dataset.puppetrySid = data.sids[ counter++ ];
    }, false );`});
    });
    
  });

  afterAll(async () => {
    await bs.teardown();
  });


  describe( "Main page", async () => {

    test( "on PC/Notebook 1280x1024 {36ijnyo1oho}", async () => {
      let result, assert;
      // @puppetry-command-id=36ijnyo161a:36ijnyo1oho:36ijnyo2pxx

      // Defining browser viewport
      await bs.page.setViewport( {"width":1280,"height":1024} );
  
      // @puppetry-command-id=36ijnyo161a:36ijnyo1oho:36ijnyo3ewr

      // Navigating to https://dsheiko.github.io/react-html5-form/
      await bs.page.goto( "https://dsheiko.github.io/react-html5-form/", {"timeout":30000,"waitUntil":"load"} );
        await bs.page.waitForSelector(`body[data-puppetry-sid="36ijnyo3ewr"]`, { timeout: 900000 });
      // @puppetry-command-id=36ijnyo161a:36ijnyo1oho:8wcjztota9n
      
      // Emulating user input
      await ( await SEL_EMAIL() ).type( "WRONG EMAIL" );    await bs.page.waitForSelector(`body[data-puppetry-sid="8wcjztota9n"]`, { timeout: 900000 });
      // @puppetry-command-id=36ijnyo161a:36ijnyo1oho:8wcjztotqll
      
      // Emulating user input
      await ( await SEL_FNAME() ).type( `${ util.exp.fake( "name.jobDescriptor", "de_CH" ) }` );    await bs.page.waitForSelector(`body[data-puppetry-sid="8wcjztotqll"]`, { timeout: 900000 });
    });

  });


});
